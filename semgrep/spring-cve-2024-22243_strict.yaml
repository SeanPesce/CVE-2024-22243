# Author: Sean Pesce


rules:


# Specific search for direct calls to UriComponentsBuilder.fromUriString, etc. (only works if build() and getHost() are called in the same scope - no taint analysis)
#rules:
- id: cve-2024-22243-uricomponentsbuilder_strict
  languages:
    - java
  options:
    interfile: true
  patterns:
  - pattern-either:
    - patterns:
      - pattern: $CLAZZ. ... .$FUNC(...). ... .getHost()
      - pattern-not: $CLAZZ. ... .$FUNC("..."). ... .getHost()
    - patterns:
      - pattern: |
          (UriComponents $INST) = $CLAZZ. ... .$FUNC(...). ... .build();
          ...
          (UriComponents $INST).getHost();
      - pattern-not: |
          (UriComponents $INST) = $CLAZZ. ... .$FUNC("..."). ... .build();
          ...
          (UriComponents $INST).getHost();
    - patterns:
      - pattern: |
          $BUILDER = $CLAZZ. ... .$FUNC(...). ... ;
          (UriComponents $INST) = ($CLAZZ $BUILDER). ... .build();
          ...
          (UriComponents $INST).getHost();
      - pattern-not: |
          $BUILDER = $CLAZZ. ... .$FUNC("..."). ... ;
          (UriComponents $INST) = ($CLAZZ $BUILDER). ... .build();
          ...
          (UriComponents $INST).getHost();
  - metavariable-regex:
      metavariable: $CLAZZ
      regex: ^(UriComponentsBuilder|ServletUriComponentsBuilder)$
  - metavariable-regex:
      metavariable: $FUNC
      regex: ^(fromUriString|fromHttpUrl)$
  message: >-
    Potential unsafe use of Spring UriComponentsBuilder (fromUriString/fromHttpUrl), which can cause a host name mismatch (potentially resulting in open redirect or SSRF) for specially-crafted inputs.
  severity: WARNING
  metadata:
    cwe:
    - 'CWE-601: URL Redirection to Untrusted Site (Open Redirect)'
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    source-rule-url: 'https://spring.io/security/'
    references:
    - https://spring.io/security/
    category: security
    technology:
    - java
    - spring
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: MEDIUM
    interfile: true


# Search for calls to UriComponentsBuilder.fromUriString, etc. that sink into UriComponents.getHost (with taint analysis, but cross-file analysis is untested due to being Pro-only)
#rules:
- id: cve-2024-22243-uricomponentsbuilder_taint
  languages:
    - java
  options:
    interfile: true
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern-inside: |
              $METHODNAME(..., @$REQ(...) $TYPE $SOURCE, ...) {
                ...
              }
          - pattern-inside: |
              $METHODNAME(..., @$REQ $TYPE $SOURCE, ...) {
                ...
              }
        - metavariable-regex:
            metavariable: $TYPE
            regex: ^(?!(Integer|Long|Float|Double|Char|Boolean|int|long|float|double|char|boolean))
        - metavariable-regex:
            metavariable: $REQ
            regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)
      - patterns:
        - pattern-either:
          - pattern-inside: |
              @$ATTR
              public $METHODRETTYPE $METHODNAME(..., $TYPE $SOURCE, ...) {
                ...
              }
          - pattern-inside: |
              @$ATTR(...)
              public $METHODRETTYPE $METHODNAME(..., $TYPE $SOURCE, ...) {
                ...
              }
        - metavariable-regex:
            metavariable: $TYPE
            regex: ^(?!(Integer|Long|Float|Double|Char|Boolean|int|long|float|double|char|boolean))
        - metavariable-regex:
            metavariable: $ATTR
            regex: (Request|Delete|Get|Patch|Put|Post)Mapping
    - focus-metavariable: $SOURCE
  # Unclear whether these are helpful
  pattern-propagators:
    - pattern: $N = $CLASS. ... .$FUNC(..., $S, ...)
      from: $S
      to: $N
    - pattern: $N = $S. ... .$FUNC(...)
      from: $S
      to: $N
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: $CLASS.$FUNC(...)
        - metavariable-regex:
            metavariable: $FUNC
            regex: ^(fromUriString|fromHttpUrl)$
  message: >-
    Potential unsafe use of Spring UriComponentsBuilder (fromUriString/fromHttpUrl), which can cause a host name mismatch (potentially resulting in open redirect or SSRF) for specially-crafted inputs.
  severity: WARNING
  metadata:
    cwe:
    - 'CWE-601: URL Redirection to Untrusted Site (Open Redirect)'
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    source-rule-url: 'https://spring.io/security/'
    references:
    - https://spring.io/security/
    category: security
    technology:
    - java
    - spring
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: MEDIUM
    interfile: true


# Search for calls to WebClient and related classes/methods using untrusted Strings (with taint analysis, but cross-file analysis is untested due to being Pro-only)
#rules:
- id: cve-2024-todo-webclient_taint
  languages:
    - java
  options:
    interfile: true
  mode: taint
  pattern-sources:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern-inside: |
              $METHODNAME(..., @$REQ(...) $TYPE $SOURCE, ...) {
                ...
              }
          - pattern-inside: |
              $METHODNAME(..., @$REQ $TYPE $SOURCE, ...) {
                ...
              }
        - metavariable-regex:
            metavariable: $TYPE
            regex: ^(?!(Integer|Long|Float|Double|Char|Boolean|int|long|float|double|char|boolean))
        - metavariable-regex:
            metavariable: $REQ
            regex: (RequestBody|PathVariable|RequestParam|RequestHeader|CookieValue|ModelAttribute)
      - patterns:
        - pattern-either:
          - pattern-inside: |
              @$ATTR
              public $METHODRETTYPE $METHODNAME(..., $TYPE $SOURCE, ...) {
                ...
              }
          - pattern-inside: |
              @$ATTR(...)
              public $METHODRETTYPE $METHODNAME(..., $TYPE $SOURCE, ...) {
                ...
              }
        - metavariable-regex:
            metavariable: $TYPE
            regex: ^(?!(Integer|Long|Float|Double|Char|Boolean|int|long|float|double|char|boolean))
        - metavariable-regex:
            metavariable: $ATTR
            regex: (Request|Delete|Get|Patch|Put|Post)Mapping
    - focus-metavariable: $SOURCE
  # Unclear whether these are helpful
  pattern-propagators:
    - pattern: $N = $CLASS. ... .$FUNC(..., $S, ...)
      from: $S
      to: $N
    - pattern: $N = $S. ... .$FUNC(...)
      from: $S
      to: $N
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: (WebClient $INST). ... .$SINKFUNC($SINK, ...)
      - pattern: (WebClient.Builder $INST). ... .$SINKFUNC($SINK, ...)
      - pattern: (WebClient.RequestHeadersUriSpec $INST). ... .$SINKFUNC($SINK, ...)
      - pattern: (WebClient.RequestHeadersUriSpec<?> $INST). ... .$SINKFUNC($SINK, ...)
    - metavariable-regex:
        metavariable: $SINKFUNC
        regex: ^(uri|create|baseUrl)$
    # - focus-metavariable: $SINK
  message: >-
    Potential unsafe use of org.springframework.web.reactive.function.client.WebClient, which can cause a host name mismatch (potentially resulting in SSRF) for specially-crafted inputs.
  severity: WARNING
  metadata:
    cwe:
    - 'CWE-918: Server-Side Request Forgery (SSRF)'
    source-rule-url: 'https://spring.io/security/'
    references:
    - https://spring.io/security/
    category: security
    technology:
    - java
    - spring
    likelihood: MEDIUM
    impact: MEDIUM
    confidence: MEDIUM
    interfile: true


